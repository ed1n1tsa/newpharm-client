import { NextResponse } from 'next/server'
import { supabaseAdmin } from '@/lib/supabase-admin'

const ONE_C_URL =
  'https://ws3.smartsystem.kz/APT_NEWPHARM/hs/counterparties/counterparties_list'
const ONE_C_AUTH =
  'Basic ' + Buffer.from('bot_ai:40zuduH').toString('base64')

export async function GET() {
  try {
    console.log('üì° –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ 1–°...')
    const res = await fetch(ONE_C_URL, { headers: { Authorization: ONE_C_AUTH } })
    if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${res.statusText}`)

    const json = await res.json()
    console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${json.length} —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç 1–°`)

    // üíæ –í—ã–∑—ã–≤–∞–µ–º —Ç–≤–æ—é SQL-—Ñ—É–Ω–∫—Ü–∏—é
    const { error } = await supabaseAdmin.rpc('update_stocks_from_1c', { json_data: json })
    if (error) throw error

    return NextResponse.json({
      success: true,
      message: `‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ (${json.length} –ø–æ–∑–∏—Ü–∏–π).`,
    })
  } catch (err: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', err.message)
    return NextResponse.json({ success: false, error: err.message }, { status: 500 })
  }
}
