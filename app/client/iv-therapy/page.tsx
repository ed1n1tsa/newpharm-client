'use client'

import { useState } from 'react'
import { supabase } from '@/lib/supabase-browser'

const therapies = [
  {
    id: 1,
    name: 'üíß –í–∏—Ç–∞–º–∏–Ω–Ω–∞—è –∫–∞–ø–µ–ª—å–Ω–∏—Ü–∞',
    description: '–ò–º–º—É–Ω–∏—Ç–µ—Ç, —ç–Ω–µ—Ä–≥–∏—è, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–º–∞.',
    price: 9000,
    category: '–∏–º–º—É–Ω–∏—Ç–µ—Ç',
    details:
      '–ö–æ–º–ø–ª–µ–∫—Å –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –≥—Ä—É–ø–ø—ã B, C –∏ –º–∏–∫—Ä–æ—ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ç–æ–Ω—É—Å–∞ –∏ —ç–Ω–µ—Ä–≥–∏–∏.',
  },
  {
    id: 2,
    name: 'üßò –ê–Ω—Ç–∏—Å—Ç—Ä–µ—Å—Å',
    description: '–°–Ω–∏–º–∞–µ—Ç —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å, —É–ª—É—á—à–∞–µ—Ç —Å–æ–Ω –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é.',
    price: 10500,
    category: '–∞–Ω—Ç–∏—Å—Ç—Ä–µ—Å—Å',
    details:
      '–ú–∞–≥–Ω–∏–π, –≤–∏—Ç–∞–º–∏–Ω—ã –≥—Ä—É–ø–ø—ã B, –≥–ª–∏—Ü–∏–Ω –∏ —ç–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.',
  },
  {
    id: 3,
    name: 'üåø –î–µ—Ç–æ–∫—Å',
    description: '–ü–æ—Å–ª–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –∏ –¥–ª—è –æ—á–∏—â–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–º–∞.',
    price: 10000,
    category: '–¥–µ—Ç–æ–∫—Å',
    details:
      'L-–∫–∞—Ä–Ω–∏—Ç–∏–Ω, –≥–ª—É—Ç–∞—Ç–∏–æ–Ω, –≤–∏—Ç–∞–º–∏–Ω—ã C –∏ B12 –¥–ª—è –æ—á–∏—â–µ–Ω–∏—è –∏ —É—Å–∫–æ—Ä–µ–Ω–∏—è –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞.',
  },
  {
    id: 4,
    name: '‚ú® –ö—Ä–∞—Å–∏–≤–∞—è –∫–æ–∂–∞',
    description: '–î–ª—è —É–ø—Ä—É–≥–æ—Å—Ç–∏ –∫–æ–∂–∏, —Å–∏—è–Ω–∏—è –∏ –º–æ–ª–æ–¥–æ—Å—Ç–∏.',
    price: 11000,
    category: '–æ–º–æ–ª–æ–∂–µ–Ω–∏–µ',
    details:
      '–ö–æ–ª–ª–∞–≥–µ–Ω, –≥–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞, –≤–∏—Ç–∞–º–∏–Ω E –∏ —Ü–∏–Ω–∫ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã –∏ —É–ø—Ä—É–≥–æ—Å—Ç–∏ –∫–æ–∂–∏.',
  },
]

export default function IvTherapyPage() {
  const [selectedCategory, setSelectedCategory] = useState('–≤—Å–µ')
  const [selected, setSelected] = useState<any>(null)
  const [formData, setFormData] = useState({
    full_name: '',
    phone: '',
    type: 'offline',
    datetime: '',
    comment: '',
  })
  const [success, setSuccess] = useState(false)
  const [loading, setLoading] = useState(false)

  const filtered =
    selectedCategory === '–≤—Å–µ'
      ? therapies
      : therapies.filter((t) => t.category === selectedCategory)

  // üßæ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –≤ Supabase
  // üßæ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –≤ Supabase
async function handleSubmit(e: React.FormEvent) {
    e.preventDefault()
    if (!selected) return
  
    setLoading(true)
  
    const { error } = await supabase.from('appointments').insert({
      patient_name: formData.full_name,
      patient_phone: formData.phone,
      consultation_type: formData.type,
      appointment_time: formData.datetime,
      comment: formData.comment,
      service_name: selected.name,
      service_price: selected.price,
      status: 'pending',
      source: 'iv_therapy',
    })
  
    if (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏:', error.message)
      setLoading(false)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
    } else {
      setLoading(false)
      setSuccess(true)
      setTimeout(() => {
        setSuccess(false)
        setSelected(null)
        setFormData({
          full_name: '',
          phone: '',
          type: 'offline',
          datetime: '',
          comment: '',
        })
      }, 3000)
    }
  }
  
  return (
    <main className="max-w-5xl mx-auto px-4 py-8 text-[#001759] font-[Inter]">
      <h1 className="text-3xl font-bold mb-6">
        IV-—Ç–µ—Ä–∞–ø–∏—è (–≤–∏—Ç–∞–º–∏–Ω–Ω—ã–µ –∫–∞–ø–µ–ª—å–Ω–∏—Ü—ã)
      </h1>

      {/* üîπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
      <div className="bg-white rounded-2xl p-6 shadow-sm mb-8">
        <h2 className="text-xl font-semibold mb-2">–ß—Ç–æ —Ç–∞–∫–æ–µ –ê–π–≤–∏-—Ç–µ—Ä–∞–ø–∏—è?</h2>
        <p className="text-slate-700 mb-3">
          –ê–π–≤–∏-—Ç–µ—Ä–∞–ø–∏—è ‚Äî —ç—Ç–æ –≤–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ–µ –≤–≤–µ–¥–µ–Ω–∏–µ –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –∏ –º–∏–∫—Ä–æ—ç–ª–µ–º–µ–Ω—Ç–æ–≤
          –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è, —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ –∏ —É–ª—É—á—à–µ–Ω–∏—è —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è.
        </p>
        <ul className="text-sm text-slate-600 space-y-1">
          <li>‚úÖ –ë—ã—Å—Ç—Ä—ã–π —ç—Ñ—Ñ–µ–∫—Ç</li>
          <li>‚úÖ 100% —É—Å–≤–æ–µ–Ω–∏–µ</li>
          <li>‚úÖ –ë–µ–∑ –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –ñ–ö–¢</li>
          <li>‚úÖ –ü—Ä–æ–≤–æ–¥–∏—Ç—Å—è —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–µ–¥—Å–µ—Å—Ç—Ä–æ–π</li>
        </ul>
      </div>

      {/* üîπ –§–∏–ª—å—Ç—Ä */}
      <div className="flex gap-3 flex-wrap mb-6">
        {['–≤—Å–µ', '–∏–º–º—É–Ω–∏—Ç–µ—Ç', '–∞–Ω—Ç–∏—Å—Ç—Ä–µ—Å—Å', '–¥–µ—Ç–æ–∫—Å', '–æ–º–æ–ª–æ–∂–µ–Ω–∏–µ'].map(
          (cat) => (
            <button
              key={cat}
              onClick={() => setSelectedCategory(cat)}
              className={`px-4 py-2 rounded-full font-semibold border ${
                selectedCategory === cat
                  ? 'bg-emerald-500 text-white border-emerald-500'
                  : 'bg-white text-emerald-600 border-emerald-500 hover:bg-emerald-50'
              }`}
            >
              {cat.charAt(0).toUpperCase() + cat.slice(1)}
            </button>
          )
        )}
      </div>

      {/* üîπ –°–ø–∏—Å–æ–∫ –∫–∞–ø–µ–ª—å–Ω–∏—Ü */}
      <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {filtered.map((t) => (
          <div
            key={t.id}
            className="bg-white p-5 rounded-2xl shadow-sm border hover:shadow-md transition"
          >
            <h3 className="text-lg font-semibold mb-1">{t.name}</h3>
            <p className="text-sm text-slate-600 mb-2">{t.description}</p>
            <p className="text-emerald-600 font-semibold mb-3">
              {t.price.toLocaleString('ru-RU')} ‚Ç∏
            </p>
            <button
              onClick={() => setSelected(t)}
              className="bg-emerald-500 hover:bg-emerald-600 text-white rounded-lg px-4 py-2 w-full font-semibold"
            >
              –ü–æ–¥—Ä–æ–±–Ω–µ–µ
            </button>
          </div>
        ))}
      </div>

      {/* üîπ –ú–æ–¥–∞–ª–∫–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Ñ–æ—Ä–º–æ–π */}
      {selected && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
          <div className="bg-white p-6 rounded-2xl max-w-md w-full text-center shadow-md">
            <h3 className="text-xl font-semibold mb-2">{selected.name}</h3>
            <p className="text-slate-700 mb-3">{selected.details}</p>
            <p className="font-semibold text-emerald-600 mb-4">
              –¶–µ–Ω–∞: {selected.price.toLocaleString('ru-RU')} ‚Ç∏
            </p>

            {success ? (
              <p className="text-emerald-600 font-semibold">
                ‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å!
              </p>
            ) : (
              <form
                onSubmit={handleSubmit}
                className="text-left space-y-3 text-sm"
              >
                <input
                  type="text"
                  placeholder="–§–ò–û"
                  required
                  value={formData.full_name}
                  onChange={(e) =>
                    setFormData({ ...formData, full_name: e.target.value })
                  }
                  className="w-full border rounded-lg px-3 py-2"
                />
                <input
                  type="tel"
                  placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                  required
                  value={formData.phone}
                  onChange={(e) =>
                    setFormData({ ...formData, phone: e.target.value })
                  }
                  className="w-full border rounded-lg px-3 py-2"
                />
                <select
                  value={formData.type}
                  onChange={(e) =>
                    setFormData({ ...formData, type: e.target.value })
                  }
                  className="w-full border rounded-lg px-3 py-2"
                >
                  <option value="offline">–û—Ñ—Ñ–ª–∞–π–Ω (–≤ –∫–∞–±–∏–Ω–µ—Ç–µ)</option>
                  <option value="online">–û–Ω–ª–∞–π–Ω (–≤–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫)</option>
                </select>
                <input
                  type="datetime-local"
                  required
                  value={formData.datetime}
                  onChange={(e) =>
                    setFormData({ ...formData, datetime: e.target.value })
                  }
                  className="w-full border rounded-lg px-3 py-2"
                />
                <textarea
                  placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
                  value={formData.comment}
                  onChange={(e) =>
                    setFormData({ ...formData, comment: e.target.value })
                  }
                  className="w-full border rounded-lg px-3 py-2"
                />
                <button
                  type="submit"
                  disabled={loading}
                  className="bg-emerald-500 hover:bg-emerald-600 text-white rounded-lg px-4 py-2 w-full font-semibold"
                >
                  {loading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è'}
                </button>
              </form>
            )}

            <button
              onClick={() => setSelected(null)}
              className="mt-4 bg-gray-200 text-gray-700 px-5 py-2 rounded-lg font-semibold hover:bg-gray-300"
            >
              –ó–∞–∫—Ä—ã—Ç—å
            </button>
          </div>
        </div>
      )}
    </main>
  )
}
