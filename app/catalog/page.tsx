// app/catalog/page.tsx
import CatalogView from "@/ui/ProductList";
import ServicesSection from "@/ui/ServicesSection";
import { categories as mockCategories, products as mockProducts } from "@/lib/mockData";
import { supabaseAdmin } from "@/lib/supabase-admin"; // —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Supabase

export const metadata = {
  title: "–ö–∞—Ç–∞–ª–æ–≥ ‚Äî –ù—å—é-–§–∞—Ä–º",
};

async function getProducts() {
  try {
    console.log("üì° –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ Supabase...");

    // üîπ –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    const { data: products, error } = await supabaseAdmin
      .from("products")
      .select("*")
      .eq("is_active", true)
      .order("updated_at", { ascending: false })
      .limit(1000);

    if (error) throw error;

    console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∏–∑ Supabase:", products?.length || 0);

    if (!products?.length) {
      console.warn("‚ö†Ô∏è –í Supabase –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º mockData");
      return { categories: mockCategories, products: mockProducts };
    }

    // üß© –§–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
    const categories = Array.from(
      new Set(products.map((p) => p.category).filter(Boolean))
    ).map((name) => ({
      id: name.toLowerCase().replace(/\s+/g, "-"),
      name,
    }));

    console.log(`üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);

    return { categories, products };
  } catch (err: any) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ Supabase:", err.message);
    return { categories: mockCategories, products: mockProducts };
  }
}

export default async function CatalogPage() {
  const { categories, products } = await getProducts();

  return (
    <main className="min-h-screen">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ + –ø–æ–∏—Å–∫ */}
      <section className="container mx-auto px-4 pt-10">
        <div className="flex flex-col gap-6 md:flex-row md:items-center md:justify-between">
          <h1 className="text-3xl md:text-4xl font-extrabold text-slate-800">
            –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
          </h1>

          {/* –ü–æ–∏—Å–∫ */}
          
        </div>
      </section>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç: —Ñ–∏–ª—å—Ç—Ä + –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <CatalogView categories={categories} allProducts={products} />

      <ServicesSection />
    </main>
  );
}
