'use client'
import { useState, useEffect } from 'react'
import Link from 'next/link'
import { usePathname } from 'next/navigation'
import LogoutBtn from './_logout'
import '@/styles/admin.css'

// üé® –ò–∫–æ–Ω–∫–∏
import {
  LayoutDashboard,
  Package,
  ClipboardList,
  UserCog,
  FileText,
  Stethoscope,
  Droplets,
  ActivitySquare,
  RefreshCcw,
  ShoppingCart,
} from 'lucide-react'

export default function AdminLayout({ children }: { children: React.ReactNode }) {
  const pathname = usePathname()
  const [open, setOpen] = useState(false)

  useEffect(() => setOpen(false), [pathname])

  const nav = [
    { href: '/admin', label: '–û–±–∑–æ—Ä', icon: LayoutDashboard },
    { href: '/admin/products', label: '–¢–æ–≤–∞—Ä—ã', icon: Package },
    { href: '/admin/procedures', label: '–ü—Ä–æ—Ü–µ–¥—É—Ä—ã', icon: ClipboardList },
    { href: '/admin/doctors', label: '–í—Ä–∞—á–∏', icon: Stethoscope },
    { href: '/admin/certificates', label: '–°–ø—Ä–∞–≤–∫–∏', icon: FileText },
    { href: '/admin/nurses', label: '–ú–µ–¥—Å—ë—Å—Ç—Ä—ã', icon: UserCog },
    { href: '/admin/iv-therapy', label: 'IV-—Ç–µ—Ä–∞–ø–∏—è', icon: Droplets },
    { href: '/admin/orders', label: '–ó–∞–∫–∞–∑—ã', icon: ShoppingCart },
    { href: '/admin/integration', label: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è 1–°', icon: RefreshCcw },
    { href: '/admin/director', label: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', icon: ActivitySquare },
  ]

  return (
    <div className="min-h-screen flex bg-gray-50 text-gray-900 font-inter relative">
      {/* –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–æ–º –º–µ–Ω—é (–º–æ–±.) */}
      {open && (
        <div
          className="fixed inset-0 bg-black/40 z-30 md:hidden"
          onClick={() => setOpen(false)}
        />
      )}

      {/* –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é */}
      <aside
        className={`fixed md:static z-40 bg-white border-r shadow-sm w-[280px] flex flex-col transition-transform duration-300 ${
          open ? 'translate-x-0' : '-translate-x-full md:translate-x-0'
        }`}
      >
        <div className="p-6 font-semibold text-xl border-b text-teal-600">
          –ù—å—é-–§–∞—Ä–º ‚Ä¢ –ê–¥–º–∏–Ω
        </div>

        <nav className="flex-1 overflow-y-auto px-4 py-3 space-y-1">
          {nav.map((item) => {
            const Icon = item.icon
            const active = pathname === item.href
            return (
              <Link
                key={item.href}
                href={item.href}
                className={`flex items-center gap-3 rounded-lg px-4 py-2.5 text-[15px] font-medium transition ${
                  active
                    ? 'bg-teal-50 text-teal-700 border-l-4 border-teal-500'
                    : 'hover:bg-gray-100 text-gray-700'
                }`}
              >
                <Icon className="h-[18px] w-[18px]" />
                {item.label}
              </Link>
            )
          })}
        </nav>

        <div className="p-5 border-t text-sm">
          <div className="text-gray-700 font-medium truncate">director@test.kz</div>
          <div className="uppercase text-xs text-gray-500 mb-2">DIRECTOR</div>
          <LogoutBtn />
        </div>
      </aside>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 flex flex-col">
        {/* –ú–æ–±–∏–ª—å–Ω—ã–π —Ö–µ–¥–µ—Ä */}
        <header className="md:hidden flex items-center justify-between p-4 bg-teal-500 text-white shadow-sm">
          <button
            onClick={() => setOpen(!open)}
            className="p-2 rounded-md border border-white/30 hover:bg-teal-600 focus:outline-none transition"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              className="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M4 6h16M4 12h16M4 18h16"
              />
            </svg>
          </button>
          <div className="font-semibold text-base">–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</div>
        </header>

        <main className="flex-1 p-8 md:p-10">{children}</main>
      </div>
    </div>
  )
}
